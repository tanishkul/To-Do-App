{"version":3,"sources":["components/Card/Card.js","components/Modal/Modal.js","modules/TodoList/TodoList.js","App.js","index.js"],"names":["Card","entries","deleteItem","editItem","className","map","item","onClick","key","title","text","Modal","onClose","onSubmit","show","data","useState","setTitle","setText","setKey","hasError","setError","useEffect","ReactDOM","createPortal","CSSTransition","in","unmountOnExit","timeout","enter","exit","e","stopPropagation","htmlFor","id","value","onChange","target","document","getElementById","TodoList","props","addItem","preventDefault","state","length","newItem","Date","now","setState","prevState","items","filteredItems","filter","find","isModalOpen","editableItem","closeModal","handleChange","updatedItems","objIndex","findIndex","obj","this","placeholder","Component","App","render","StrictMode"],"mappings":"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","file":"static/js/main.857601ee.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Card = ({ entries, deleteItem, editItem }) => {\n    return (\n      <ul className=\"theList\">\n        {entries.map(item => {\n          return (\n          <li key={item.key}>\n            <div className=\"card\">\n              <div className=\"btnDelete\">\n                <button className=\"btn\" onClick={() => editItem(item.key)}><i className=\"fa fa-edit\"></i></button>\n                <button className=\"btn\" onClick={() => deleteItem(item.key)}><i className=\"fa fa-trash\"></i></button>\n              </div>\n              <div className=\"container\">\n                <h4><b>{item.title}</b></h4>\n                <p>{item.text}</p>\n              </div>\n            </div>\n          </li>)\n        })}         \n      </ul>\n    );\n};\n\nexport default Card;","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./style.css\";\n\nconst Modal = ({ onClose, onSubmit, show, data }) => {\n  const [title, setTitle] = useState();\n  const [text, setText] = useState();\n  const [key, setKey] = useState();\n  const [hasError, setError] = useState(false);\n\n  useEffect(() => {\n    const { title, text, key } = data;\n    setText(text);\n    setTitle(title);\n    setKey(key);\n  }, [data]);\n\n  if(!hasError && text === \"\") {\n    setError(true);\n  }\n\n  if(hasError && text !== \"\") {\n    setError(false);\n  }\n\n  return ReactDOM.createPortal(\n    <CSSTransition\n      in={show}\n      unmountOnExit\n      timeout={{ enter: 0, exit: 300 }}\n    >\n      <div className=\"modal\" onClick={onClose}>\n        <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n          <div className=\"modal-header\">\n            <h4 className=\"modal-title\">Edit Task...</h4>\n          </div>\n            <div className=\"modal-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                className=\"modal-control\"\n                id=\"title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </div>\n            <div className=\"modal-group\">\n              <label htmlFor=\"text\">Task</label>\n              <input\n                className=\"modal-control\"\n                id=\"text\"\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n              />\n            </div>\n            {hasError &&\n              <div className=\"modal-group-warning\">\n                <p className=\"warning-text\">Task is required!</p>\n              </div>\n            }\n          <div className=\"modal-footer\">\n            <button onClick={onClose} className=\"button\">\n              Close\n            </button>\n            <button className=\"button-primary\" onClick={() => onSubmit({title, text, key})}>\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </CSSTransition>,\n    document.getElementById(\"root\")\n  );\n};\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport { Card, Modal } from \"../../components\";\nimport \"./style.css\";\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            text: '',\n            title: '',\n            isModalOpen: false,\n            editableItem: {},\n          };\n      }\n\n      addItem = (e) => {\n        e.preventDefault();\n        const { text, title } = this.state;\n        if (text.length === 0){\n          return;\n        }\n        const newItem = {\n          title: title,\n          text: text,\n          key: Date.now()\n        }\n        this.setState((prevState) => {\n          return {\n          items: [newItem, ...prevState.items]\n        }});\n        this.setState({\n          text: '',\n          title: ''\n        });\n      }\n\n      deleteItem = (key) => {\n        const { items } = this.state;\n        const filteredItems = items.filter((item) => {\n          return (item.key !== key);\n        });\n        this.setState({\n          items: filteredItems\n        });\n      }\n\n      editItem = (key) => {\n        const { items } = this.state;\n        const filteredItems = items.find((item) => {\n          return (item.key === key);\n        });\n        this.setState({\n          isModalOpen: true,\n          editableItem: filteredItems\n        });\n      }\n\n      closeModal = () => {\n        this.setState({\n          isModalOpen: false,\n        })\n      }\n\n      handleChange = (e, key) => {\n        if (e.target.value) {\n          this.setState({\n            [key]: e.target.value,\n          });\n        }\n      }\n\n      onSubmit  = (data) => {\n        const { title, text, key } = data;\n        const { items } = this.state;\n        const updatedItems = [...items];\n        const objIndex = updatedItems.findIndex((obj => obj.key === key));\n        updatedItems[objIndex].title = title;\n        updatedItems[objIndex].text = text;\n        this.setState({\n          isModalOpen: false,\n          items: updatedItems\n        });\n      };\n\n  render() {\n    const { text, title, items, isModalOpen, editableItem } = this.state;\n\n    return (\n      <>\n        <Modal\n          onClose={this.closeModal}\n          show={isModalOpen}\n          data={editableItem}\n          onSubmit={this.onSubmit}\n        />\n        <div className=\"todoListMain\">\n          <div className=\"header\">\n            <form onSubmit={this.addItem} className=\"formClass\">\n              <input \n                placeholder=\"Title...\"\n                onChange={(e) => { this.handleChange(e, 'title') }}\n                value={title}\n              />\n              <input\n                placeholder=\"Task to do...\"\n                onChange={(e) => { this.handleChange(e, 'text') }}\n                value={text}\n              />\n              <button>Add</button>\n            </form>\n          </div>\n          <div className=\"todoItemsHeader\">\n            <Card entries={items} deleteItem={this.deleteItem} editItem={this.editItem}/>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default TodoList;","import './App.css';\nimport React from 'react';\n\nimport { TodoList } from './modules';\n\nconst App = () => {\n    return (\n      <TodoList />\n    );\n}\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}